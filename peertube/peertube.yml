# further reading https://github.com/Chocobozzz/PeerTube/blob/develop/support/doc/production.md

---
- name : Do the prerequired steps for a peertube install 
  hosts : peertube
  vars_files: ../var/peertube.yml
  handlers: 
    - name: start ngnix
      service:
        name: nginx
        state: started
  tasks:
  - name: Create a seperate user for web
    ansible.builtin.user:
      name: "{{ username }}"
      shell: /bin/bash
      home: /var/www/peertube
      password: "{{ password }}"
      state: present

  - name: basic tools
    apt:
      name: 
        - sudo 
        - grep
        - python-psycopg2
        - unzip 
        - redis-server
      state: present 

  - name: configure redis to support systemd 
    lineinfile:
      path: /etc/redis/redis.conf
      regexp: "supervised"
      line: supervised systemd

  - name: restart redis
    systemd:
      name: redis-server
      enabled: yes
      state: restarted

  - name: add postgres key
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
  

  - name: add postgres package source 
    apt_repository:
      repo: deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main
      state: present

  - name: install postgresql 
    apt:
      name: 
        - postgresql-13
      state: present 
  
  - name: Create a postgres peertube user
    postgresql_user:
      name: "{{ databaseusername }}"
      password: "{{ password }}"
    become: yes
    become_user: postgres
    

  - name : create a database for the videos 
    community.postgresql.postgresql_db:
      name : peertube_prod
      template: template0
      encoding: UTF-8
      owner: "{{ databaseusername }}"
    become: yes
    become_user: postgres

  - name: adding the postgres ext
    community.postgresql.postgresql_ext:
      name: "{{ item }}"
      state: present
      db: peertube_prod
    with_items: 
      - ["pg_trgm", "unaccent"]
    become: yes
    become_user: postgres


  - name: checking current peertube version
    ansible.builtin.uri:
      follow_redirects: no
      method: GET
      url: https://api.github.com/repos/chocobozzz/peertube/releases/latest
      body_format: json
    register: version
  
  - name: current peertube version 
    ansible.builtin.debug: 
      var: version["json"]["name"]

  - name: "creating folders for peertube"
    file:
      path: "{{ item }}"
      state: directory
      mode: "750"
    with_items:
    - ["/var/www/peertube/config","/var/www/peertube/storage","/var/www/peertube/versions","/var/www/peertube/tmp/"]
    become: yes
    become_user: peertube

  - name: check weather version is already installed
    stat: path=/var/www/peertube/versions/peertube-{{ version["json"]["name"] }}
    register: downloaded

  - name: dowload peertube 
    unarchive:
      src: https://github.com/Chocobozzz/PeerTube/releases/download/{{ version["json"]["name"] }}/peertube-{{ version["json"]["name"] }}.zip
      dest: /var/www/peertube/versions/
      remote_src: True
    become: yes
    become_user: peertube
    when: not downloaded.stat.exists


    # Note using a old lts version cause a yard dependency is to old
    # if an update is ready just change the 14 to 16 and delete the node js install from the mashine
  - name: download shell code for nodejs
    get_url:
      url: https://deb.nodesource.com/setup_14.x
      dest: /var/www/peertube/tmp/
    register: shellnodejs

  - name: setup nodejs 
    command: "bash {{ shellnodejs.dest }}"
    changed_when: False

  - name: install nodejs
    apt: 
      name: nodejs
      state: present
  
  - name: install yarn
    npm:
      name: yarn
      state: present
      global: yes
  
  - name: create a syslink for latest version
    file:
      src: /var/www/peertube/versions/peertube-{{ version["json"]["name"] }}
      dest: "/var/www/peertube/peertube-latest"
      state: link

  - name: yarn install of dependencies
    yarn:
      path: /var/www/peertube/peertube-latest/
      production: yes
      state: present
    become: yes 
    become_user: peertube

  - name: copy the config into the folder
    copy:
      src: ../var/peertube.conf.yaml
      dest: /var/www/peertube/config/production.yaml
      owner: peertube
      mode: "750"
  
  - name: checking weather config file is already moved
    stat: path=/var/www/peertube/config/default.yaml
    register: conf

  - name: copy the default config over 
    command: cp /var/www/peertube/peertube-latest/config/default.yaml /var/www/peertube/config/default.yaml
    become: yes
    become_user: peertube
    when: not conf.stat.exists

  - name: checking weather systemd file is already moved
    stat: path=/etc/systemd/system/peertube.service
    register: conf

  - name: copy the default systemd file 
    command: cp /var/www/peertube/peertube-latest/support/systemd/peertube.service /etc/systemd/system/
    when: not conf.stat.exists
    
  - name: reload systemd
    systemd:
      daemon_reload: true
      name: peertube.service
      state: started
      enabled: yes